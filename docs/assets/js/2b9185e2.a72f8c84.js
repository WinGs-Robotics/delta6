"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[677],{1422:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Firmware/Arduino","title":"Microcontroller Setup \ud83d\udda5\ufe0f","description":"This section explains how to set up the Arduino Nano Every and prepare the Python environment for the Delta6 system.","source":"@site/docs/Firmware/Arduino.md","sourceDirName":"Firmware","slug":"/Firmware/Arduino","permalink":"/delta6/docs/Firmware/Arduino","draft":false,"unlisted":false,"editUrl":"https://github.com/WinGs-Robotics/delta6/docs/Firmware/Arduino.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Firmware","permalink":"/delta6/docs/category/firmware"},"next":{"title":"Communication Protocol \ud83d\udef0\ufe0f","permalink":"/delta6/docs/Firmware/protocal"}}');var i=r(4848),o=r(8453);const s={sidebar_position:1},a="Microcontroller Setup \ud83d\udda5\ufe0f",l={},c=[{value:"1. Download the Repository",id:"1-download-the-repository",level:2},{value:"2. Create and Activate Python Environment",id:"2-create-and-activate-python-environment",level:2},{value:"3. Burn Firmware to Arduino",id:"3-burn-firmware-to-arduino",level:2},{value:"4. Verify Operation",id:"4-verify-operation",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"microcontroller-setup-\ufe0f",children:"Microcontroller Setup \ud83d\udda5\ufe0f"})}),"\n",(0,i.jsx)(n.p,{children:"This section explains how to set up the Arduino Nano Every and prepare the Python environment for the Delta6 system."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udce6 ",(0,i.jsx)(n.strong,{children:"Firmware Repository:"}),(0,i.jsx)(n.br,{}),"\n","The firmware code for the Arduino Nano Every is available here:",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/ttopeor/Delta6_Doc/tree/main/firmware",children:"Delta6 Firmware on GitHub"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"1-download-the-repository",children:"1. Download the Repository"}),"\n",(0,i.jsx)(n.p,{children:"Clone the Delta6 project repository:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/ttopeor/Delta6_Doc.git\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-create-and-activate-python-environment",children:"2. Create and Activate Python Environment"}),"\n",(0,i.jsx)(n.p,{children:"Navigate to the Python SDK folder:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd delta6_python_SDK\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc ",(0,i.jsx)(n.strong,{children:"Tip:"})," Ensure that Python 3.12 is installed on your system."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Create a virtual environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3.12 -m venv venv\n"})}),"\n",(0,i.jsx)(n.p,{children:"Activate the virtual environment:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"On Ubuntu:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source venv/bin/activate\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"On Windows:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"source venv/Scripts/activate\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Install all required dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install -e .\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-burn-firmware-to-arduino",children:"3. Burn Firmware to Arduino"}),"\n",(0,i.jsxs)(n.p,{children:["Check the COM port (for example ",(0,i.jsx)(n.code,{children:"/dev/ttyACM0"})," on Linux) where your Arduino Nano Every is connected.",(0,i.jsx)(n.br,{}),"\n","Then run the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python burn_firmware.py --port /dev/ttyACM0\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83e\udde9 ",(0,i.jsx)(n.strong,{children:"Tip:"})," Adjust the ",(0,i.jsx)(n.code,{children:"--port"})," argument according to your specific system setup."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-verify-operation",children:"4. Verify Operation"}),"\n",(0,i.jsx)(n.p,{children:"Run the example script:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python example.py --port /dev/ttyACM0\n"})}),"\n",(0,i.jsx)(n.p,{children:"If successful, a window should pop up similar to:"}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{src:"/img/online_eval.gif",alt:"Online Evaluation",width:"80%"})}),"\n",(0,i.jsx)(n.p,{children:"The coordinate system is defined as follows:"}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{src:"/img/overall.png",alt:"Coordinate System Definition",width:"50%"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,i.jsx)(n.strong,{children:"Congratulations!"}),(0,i.jsx)(n.br,{}),"\n","Your microcontroller setup is complete, and the Delta6 system is ready for further testing and calibration."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(6540);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);